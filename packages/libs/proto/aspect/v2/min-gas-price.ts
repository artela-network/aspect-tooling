// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from 'as-proto/assembly';
import { DecCoin } from './dec-coin';

export class MinGasPrice {
  static encode(message: MinGasPrice, writer: Writer): void {
    const coins = message.coins;
    for (let i: i32 = 0; i < coins.length; ++i) {
      writer.uint32(10);
      writer.fork();
      DecCoin.encode(coins[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): MinGasPrice {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MinGasPrice();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.coins.push(DecCoin.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  coins: Array<DecCoin>;

  constructor(coins: Array<DecCoin> = []) {
    this.coins = coins;
  }
}
