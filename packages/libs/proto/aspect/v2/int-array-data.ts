// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from 'as-proto/assembly';

export class IntArrayData {
  static encode(message: IntArrayData, writer: Writer): void {
    const data = message.data;
    if (data.length !== 0) {
      for (let i: i32 = 0; i < data.length; ++i) {
        writer.uint32(8);
        writer.int64(data[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): IntArrayData {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new IntArrayData();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.data.push(reader.int64());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  data: Array<i64>;

  constructor(data: Array<i64> = []) {
    this.data = data;
  }
}
