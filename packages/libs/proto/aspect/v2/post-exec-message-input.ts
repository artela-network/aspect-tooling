// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from 'as-proto/assembly';

export class PostExecMessageInput {
  static encode(message: PostExecMessageInput, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.from);

    writer.uint32(18);
    writer.bytes(message.to);

    writer.uint32(24);
    writer.uint64(message.index);

    writer.uint32(34);
    writer.bytes(message.data);

    writer.uint32(42);
    writer.bytes(message.value);

    writer.uint32(48);
    writer.uint64(message.gas);

    writer.uint32(58);
    writer.bytes(message.ret);

    writer.uint32(66);
    writer.string(message.error);
  }

  static decode(reader: Reader, length: i32): PostExecMessageInput {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new PostExecMessageInput();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.from = reader.bytes();
          break;

        case 2:
          message.to = reader.bytes();
          break;

        case 3:
          message.index = reader.uint64();
          break;

        case 4:
          message.data = reader.bytes();
          break;

        case 5:
          message.value = reader.bytes();
          break;

        case 6:
          message.gas = reader.uint64();
          break;

        case 7:
          message.ret = reader.bytes();
          break;

        case 8:
          message.error = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  from: Uint8Array;
  to: Uint8Array;
  index: u64;
  data: Uint8Array;
  value: Uint8Array;
  gas: u64;
  ret: Uint8Array;
  error: string;

  constructor(
    from: Uint8Array = new Uint8Array(0),
    to: Uint8Array = new Uint8Array(0),
    index: u64 = 0,
    data: Uint8Array = new Uint8Array(0),
    value: Uint8Array = new Uint8Array(0),
    gas: u64 = 0,
    ret: Uint8Array = new Uint8Array(0),
    error: string = '',
  ) {
    this.from = from;
    this.to = to;
    this.index = index;
    this.data = data;
    this.value = value;
    this.gas = gas;
    this.ret = ret;
    this.error = error;
  }
}
