// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Protobuf, Reader, Writer } from 'as-proto/assembly';

export class Blake2FOutput {
  static encode(message: Blake2FOutput, writer: Writer): void {
    const h = message.h;
    if (h.length !== 0) {
      for (let i: i32 = 0; i < h.length; ++i) {
        writer.uint32(8);
        writer.uint64(h[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): Blake2FOutput {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Blake2FOutput();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.h.push(reader.uint64());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  h: Array<u64>;

  constructor(h: Array<u64> = []) {
    this.h = h;
  }
}

export function encodeBlake2FOutput(message: Blake2FOutput): Uint8Array {
  return Protobuf.encode(message, Blake2FOutput.encode);
}

export function decodeBlake2FOutput(buffer: Uint8Array): Blake2FOutput {
  return Protobuf.decode<Blake2FOutput>(buffer, Blake2FOutput.decode);
}