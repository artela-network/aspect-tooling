// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.24.3

import { Writer, Reader } from 'as-proto/assembly';

export class CallStackQuery {
  static encode(message: CallStackQuery, writer: Writer): void {
    const callIndex = message.callIndex;
    if (callIndex.length !== 0) {
      for (let i: i32 = 0; i < callIndex.length; ++i) {
        writer.uint32(8);
        writer.uint64(callIndex[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): CallStackQuery {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CallStackQuery();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.callIndex.push(reader.uint64());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  callIndex: Array<u64>;

  constructor(callIndex: Array<u64> = []) {
    this.callIndex = callIndex;
  }
}
