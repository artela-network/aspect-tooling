// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Protobuf, Reader, Writer } from 'as-proto/assembly';
import { EthAccessTuple } from './eth-access-tuple';

export class EthAccessList {
  static encode(message: EthAccessList, writer: Writer): void {
    const accessList = message.accessList;
    for (let i: i32 = 0; i < accessList.length; ++i) {
      writer.uint32(10);
      writer.fork();
      EthAccessTuple.encode(accessList[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): EthAccessList {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new EthAccessList();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.accessList.push(EthAccessTuple.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  accessList: Array<EthAccessTuple>;

  constructor(accessList: Array<EthAccessTuple> = []) {
    this.accessList = accessList;
  }
}

export function encodeEthAccessList(message: EthAccessList): Uint8Array {
  return Protobuf.encode(message, EthAccessList.encode);
}

export function decodeEthAccessList(buffer: Uint8Array): EthAccessList {
  return Protobuf.decode<EthAccessList>(buffer, EthAccessList.decode);
}
