// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.24.3

import { Writer, Reader } from "as-proto/assembly";
import { Validator } from "./validator";

export class VoteInfo {
  static encode(message: VoteInfo, writer: Writer): void {
    const validator = message.validator;
    if (validator !== null) {
      writer.uint32(10);
      writer.fork();
      Validator.encode(validator, writer);
      writer.ldelim();
    }

    writer.uint32(16);
    writer.bool(message.signedLastBlock);
  }

  static decode(reader: Reader, length: i32): VoteInfo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new VoteInfo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.validator = Validator.decode(reader, reader.uint32());
          break;

        case 2:
          message.signedLastBlock = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  validator: Validator | null;
  signedLastBlock: bool;

  constructor(
    validator: Validator | null = null,
    signedLastBlock: bool = false
  ) {
    this.validator = validator;
    this.signedLastBlock = signedLastBlock;
  }
}
