// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader } from 'as-proto/assembly';
import { RunResult } from './run-result';
import { EthMessageCallResult } from './eth-message-call-result';

export class CallMessageResponse {
  static encode(message: CallMessageResponse, writer: Writer): void {
    const result = message.result;
    if (result !== null) {
      writer.uint32(10);
      writer.fork();
      RunResult.encode(result, writer);
      writer.ldelim();
    }

    const data = message.data;
    if (data !== null) {
      writer.uint32(18);
      writer.fork();
      EthMessageCallResult.encode(data, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): CallMessageResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CallMessageResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.result = RunResult.decode(reader, reader.uint32());
          break;

        case 2:
          message.data = EthMessageCallResult.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  result: RunResult | null;
  data: EthMessageCallResult | null;

  constructor(result: RunResult | null = null, data: EthMessageCallResult | null = null) {
    this.result = result;
    this.data = data;
  }
}
